-- Create students table
CREATE TABLE students (
    student_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(50),
    course VARCHAR2(50),
    admission_date DATE
);

-- Create student_log table
CREATE TABLE student_log (
    log_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id NUMBER,
    log_message VARCHAR2(100),
    log_date DATE
);

-- Create trigger to log insert
CREATE OR REPLACE TRIGGER trg_log_student_insert
AFTER INSERT ON students
FOR EACH ROW
BEGIN
    INSERT INTO student_log (student_id, log_message, log_date)
    VALUES (:NEW.student_id, 'New student ' || :NEW.name || ' enrolled in ' || :NEW.course, SYSDATE);
END;
/

INSERT INTO students (name, course, admission_date)
VALUES ('farsan', 'mca', SYSDATE);

SELECT * FROM student_log;

CREATE OR REPLACE TRIGGER trg_log_student_update
AFTER UPDATE OF course ON students
FOR EACH ROW
WHEN (OLD.course IS DISTINCT FROM NEW.course)
BEGIN
    INSERT INTO student_log (student_id, log_message, log_date)
    VALUES (
        :NEW.student_id,
        'Student ' || :NEW.name || ' changed course from ' || :OLD.course || ' to ' || :NEW.course,
        SYSDATE
    );
END;
/

CREATE OR REPLACE TRIGGER trg_log_student_delete
AFTER DELETE ON students
FOR EACH ROW
BEGIN
    INSERT INTO student_log (student_id, log_message, log_date)
    VALUES (
        :OLD.student_id,
        'Student ' || :OLD.name || ' was removed from the system',
        SYSDATE
    );
END;
UPDATE students SET course = 'MBA' WHERE student_id = 1;
DELETE FROM students WHERE student_id = 1;
SELECT * FROM student_log ORDER BY log_id;



--cursor
SET SERVEROUTPUT ON;

DECLARE
    -- Declare the cursor to fetch students in BBA
    CURSOR bba_students_cursor IS
        SELECT student_id, name, admission_date
        FROM students
        WHERE course = 'BBA';

    -- Variables to hold data from cursor
    v_id students.student_id%TYPE;
    v_name students.name%TYPE;
    v_date students.admission_date%TYPE;

BEGIN
    OPEN bba_students_cursor;

    LOOP
        FETCH bba_students_cursor INTO v_id, v_name, v_date;
        EXIT WHEN bba_students_cursor%NOTFOUND;

        -- Display student info
        DBMS_OUTPUT.PUT_LINE(
            'ID: ' || v_id || ', Name: ' || v_name || ', Admission: ' || TO_CHAR(v_date, 'DD-MON-YYYY')
        );
    END LOOP;

    CLOSE bba_students_cursor;
END;
/
